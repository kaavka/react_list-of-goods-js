{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortType","isReversed","sortingOptions","setSortingOptions","visibleGoodsList","goods","sortedGoodList","sort","a","b","length","localeCompare","reverse","getSortedGoodsList","className","type","cl","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"wPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,eACnBC,EAAiB,SA6BhB,IAAMC,EAAM,WACjB,MAA4CC,mBAAS,CACnDC,SAAU,GACVC,YAAY,IAFd,mBAAOC,EAAP,KAAuBC,EAAvB,KAKMC,EAjCR,SAA4BC,EAA5B,GAA8D,IAAzBL,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACvCK,EAAc,YAAOD,GAuB3B,OArBIL,GACFM,EAAeC,MAAK,SAACC,EAAGC,GACtB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAEE,OAASD,EAAEC,OAGtB,KAAKd,EACH,OAAOY,EAAEG,cAAcF,GAGzB,QACE,OAAO,MAKXR,GACFK,EAAeM,UAGVN,EASkBO,CACvBlB,EACAO,GAUF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYd,EAAeF,WAAaJ,IAE5CqB,QAAS,kBAAMd,GAAkB,SAAAe,GAAS,kCACrCA,GADqC,IAExClB,SAAUJ,QATd,iCAeA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYd,EAAeF,WAAaH,IAE5CoB,QAAS,kBAAMd,GAAkB,SAAAe,GAAS,kCACrCA,GADqC,IAExClB,SAAUH,QATd,4BAeA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAad,EAAeD,aAEhCgB,QAAS,kBAAMd,GAAkB,SAAAe,GAAS,kCACrCA,GADqC,IAExCjB,YAAaiB,EAAUjB,iBAT3B,sBAe8B,KAA5BC,EAAeF,WAAiD,IAA9BE,EAAeD,aAEjD,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA5DkB,WAC1Bd,EAAkB,CAChBH,SAAU,GACVC,YAAY,KAsDR,sBAWJ,6BAEIG,EAAiBe,KAAI,SAAAC,GAAI,OACvB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC/HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8456d27d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cl from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabetical';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getSortedGoodsList(goods, { sortType, isReversed }) {\n  const sortedGoodList = [...goods];\n\n  if (sortType) {\n    sortedGoodList.sort((a, b) => {\n      switch (sortType) {\n        case SORT_BY_LENGTH: {\n          return a.length - b.length;\n        }\n\n        case SORT_BY_ALPHABET: {\n          return a.localeCompare(b);\n        }\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoodList.reverse();\n  }\n\n  return sortedGoodList;\n}\n\nexport const App = () => {\n  const [sortingOptions, setSortingOptions] = useState({\n    sortType: '',\n    isReversed: false,\n  });\n\n  const visibleGoodsList = getSortedGoodsList(\n    goodsFromServer,\n    sortingOptions,\n  );\n\n  const resetSortingOptions = () => {\n    setSortingOptions({\n      sortType: '',\n      isReversed: false,\n    });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cl(\n            'button',\n            'is-info',\n            { 'is-light': sortingOptions.sortType !== SORT_BY_ALPHABET },\n          )}\n          onClick={() => setSortingOptions(prevState => ({\n            ...prevState,\n            sortType: SORT_BY_ALPHABET,\n          }))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cl(\n            'button',\n            'is-success',\n            { 'is-light': sortingOptions.sortType !== SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortingOptions(prevState => ({\n            ...prevState,\n            sortType: SORT_BY_LENGTH,\n          }))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cl(\n            'button',\n            'is-warning',\n            { 'is-light': !sortingOptions.isReversed },\n          )}\n          onClick={() => setSortingOptions(prevState => ({\n            ...prevState,\n            isReversed: !prevState.isReversed,\n          }))}\n        >\n          Reverse\n        </button>\n\n        {(sortingOptions.sortType !== '' || sortingOptions.isReversed !== false)\n          && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSortingOptions}\n          >\n            Reset\n          </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          visibleGoodsList.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}